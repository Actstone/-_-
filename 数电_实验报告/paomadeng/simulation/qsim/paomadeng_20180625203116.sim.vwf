/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 810.0;
		}
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 57.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 1.0;
		}
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 51.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 108.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 37.0;
		}
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 39.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 89.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 31.0;
		}
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 33.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 83.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 27.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 19.0;
		}
	}
}

TRANSITION_LIST("q[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 54.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 72.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("q[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 78.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 1.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
